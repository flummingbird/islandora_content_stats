<?php
require_once dirname(__FILE__) . '/includes/queries.inc';

/**
 * Implements hook_menu().
 */
function islandora_content_stats_menu() {
  $items = array();
  $items['admin/islandora/tools/content_stats'] = array(
    'title' => 'Content Statistics',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_content_stats_admin_form',1),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.form.inc',
  );
  $items['admin/reports/content_stats/test'] = array(
    'title' => 'DB POPULATE',
    'page callback' => 'islandora_content_stats_test',
    'access arguments' => array(TRUE),
  );
  $items['admin/reports/content_stats'] = array(
    'title' => 'Content Statistics',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_content_stats_reports_form',1),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/reports.form.inc',
  );

  return $items;
}

//dpm('cron did it thing' . time());

//
///**
// * Implements hook_block_info().
// */
//function current_posts_block_info() {
//  $blocks['current_posts'] = array(
//    // The name that will appear in the block list.
//    'info' => t('Current posts'),
//    // Default setting.
//    'cache' => DRUPAL_CACHE_PER_ROLE,
//  );
//  return $blocks;
//}


//display all query results on demand
//- as a report DONE
//- as a block -
  
//  periodically run a set of queries
//- save the results to a database table (with a timestamp)
//
//
//config:
//- specify the time to wait before running queries again
//-- if cron runs hourly, perhaps this module checks that the interval (eg 2 days) has or has not elapsed based on db timestamp
//
//menu_router (router)
//- config should islandora/tools... DONE
//- report display under ?/reports (with batch sets, etc) DONE
//
//database table (prob just one for now)
//- id, count, timestamp --DONE
//- store new records for each run, don't overwrite (so we can see growth over time...)
//- display last query (highest id with specified query)


